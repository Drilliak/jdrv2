<?php

namespace JDR\CoreBundle\Repository;

use Doctrine\DBAL\Query\QueryException;
use JDR\CoreBundle\Entity\Session;
use JDR\UserBundle\Entity\User;

/**
 * SessionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SessionRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * Renvoie les informations permettant l'affichage des sessions
     */
    public function showSessionsAsGm($idUser){
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s.date, s.description, s.name, s.id')
            ->from('JDRCoreBundle:Session', 's')
            ->innerJoin('JDRUserBundle:User', 'u')
            ->where('u.id = :idUser')
            ->setParameter('idUser', $idUser)
            ->orderBy('s.date', 'DESC')
            ->getQuery()
            ->getResult();

    }

    public function showSessionAsPlayer($idUser){
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s.date, s.description, s.name, s.id')
            ->from('JDRCoreBundle:Session', 's')
            ->innerJoin('s.users', 'u')
            ->where('u.id = :idUser')
            ->setParameter('idUser', $idUser)
            ->getQuery()
            ->getResult();
    }


    public function selectSession($sessionID, array $parameters = null)
    {
        if ($parameters == null) {
            $query = $this->_em->createQuery("SELECT s FROM JDRCoreBundle:Session s WHERE s.id = :id");
            $query->setParameter('id', $sessionID);
        } else {
            $strQuery = "SELECT ";
            for ($i = 0; $i < count($parameters); $i++) {
                if ($i == count($parameters) - 1) {
                    $strQuery .= 's.' . $parameters[$i] . ' ';
                } else {
                    $strQuery .= 's.' . $parameters[$i] . ', ';
                }

            }
            $strQuery .= " FROM JDRCoreBundle:Session s WHERE s.id = :id";

            $query = $this->_em->createQuery($strQuery);
            $query->setParameter('id', $sessionID);
        }

        return $query->getResult()[0];
    }

    public function findNameSessionAsPlayer($idPlayer)
    {
    }
}
